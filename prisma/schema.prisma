// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  // fieldName  FieldType   @attribute

  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  username  String?  @unique
  password  String?
  provider  Boolean
  createdAt DateTime @default(now())

  userInfo UserInfo?
}

enum gender {
  Male
  Female
  Others
}

model UserInfo {
  id    String @id @default(auto()) @map("_id") @db.ObjectId

  // Personal Info
  firstName  String
  lastName   String
  country    String
  gender     String
  city       String?
  profilePic String?
  about String

  // Professional Info 
  profession String
  skills     String[]
  certificates Certificates[]

  // Academic Info
  tenthMarks             Float?
  twelfthMarks           Float?
  schoolName             String
  collegeName            String?
  graduationCourse       String?
  graduationCgpa         Float?
  postgrad               String?
  postgradCgpa           Float?
  postgradSpecialization String?
  phd                    String?
  phdSpecialization      String?

  // Projects  
  allProjects  AllProjects[]

  // Contact Info 
  phoneNo  String?
  linkedIn String?
  github   String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])

  userId String @unique @db.ObjectId
}

type Certificates {
  title String
  link  String
}

model AllProjects {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  category    String
  subcategory String
  thumbnail   String?
  link        String
  techStack   String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  owner       UserInfo @relation(fields: [UserInfoId], references: [userId])
  UserInfoId  String   @db.ObjectId
}
